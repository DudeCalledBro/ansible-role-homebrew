- name: Determine homebrew ownership variables
  ansible.builtin.set_fact:
    homebrew_user: "{{ homebrew_user | default(ansible_user_id) }}"
    homebrew_group: "{{ homebrew_group | default(ansible_user_gid) }}"

- name: Create homebrew base directory
  ansible.builtin.file:
    path: "{{ homebrew_prefix }}"
    owner: "{{ homebrew_user }}"
    state: directory
    mode: 0755
  become: true

- name: Create homebrew repository directory
  ansible.builtin.file:
    path: "{{ homebrew_repository }}"
    owner: "{{ homebrew_user }}"
    group: "{{ homebrew_group }}"
    state: directory
    mode: 0755
  become: true

- name: Clone homebrew repository
  ansible.builtin.git:
    repo: "{{ homebrew_repo }}"
    dest: "{{ homebrew_repository }}"
    update: "{{ homebrew_repo_update }}"
    version: "{{ homebrew_repo_version }}"
  become: true
  become_user: "{{ homebrew_user }}"

- name: Update homebrew repository permissions
  ansible.builtin.file:
    path: "{{ homebrew_repository }}"
    owner: "{{ homebrew_user }}"
    group: "{{ homebrew_group }}"
    recurse: true
    follow: false
  become: true

- name: Setup homebrew shell completion
  ansible.builtin.lineinfile:
    path: "{{ item }}"
    line: 'eval "$({{ homebrew_repository }}/bin/brew shellenv)"'
    owner: "{{ homebrew_user }}"
    group: "{{ homebrew_group }}"
    create: true
  become: true
  become_user: "{{ homebrew_user }}"
  loop:
  - "{{ ansible_user_dir }}/.bash_profile"
  - "{{ ansible_user_dir }}/.zprofile"

- name: Gather ansible package manager facts
  ansible.builtin.setup:
    filter: ansible_pkg_mgr

- name: Setup homebrew packages
  when: homebrew_packages and homebrew_packages | length
  community.general.homebrew:
    name: "{{ item.name }}"
    state: "{{ item.state | default(omit, true) }}"
  loop: "{{ homebrew_packages }}"
  loop_control:
    label: "{{ item.name }}"
  become: false

- name: Setup homebrew cask packages
  when: homebrew_packages_cask and homebrew_packages_cask | length
  community.general.homebrew_cask:
    name: "{{ item.name }}"
    state: "{{ item.state | default(omit, true) }}"
  loop: "{{ homebrew_packages_cask }}"
  loop_control:
    label: "{{ item.name }}"
  become: false
